% This script sets the densities on the manifold M, and then computes the weighted Laplacian

%clc; % Clear the command window.
%close all; % Close all figures (except those of imtool.)
%clear; % Erase all existing variables.



%%

% weighting trigger, 2=yes, 1=uniform weight, 0=non
savedata=1;
weight=2;

% boundary conditions bc: 1=nbc 0=non 2=Dir.
bc=1;

% controls the Laplacian: 1=static, 0=dynamic,
bad=1;

% controls the # of eigenvalues we want
ed=20; 

%load matrix P, b, and d
load('info');

% N is horizonal direction
% M is vertical direction
nm=N*M;

%% densities hu(h_mu) and hn(h_nu)
% to compute weighted Laplacian, we need to values of h_\mu and h_\nu in
% the boxes adjacent to center box
Hu=zeros(2*M, 2*N); 

% odd index of Hu are at box center, even index are at the box edges
x=(min(b(:, 1)):b(1, 3):(max(b(:, 1))+b(1, 3)))'; 
y=(min(b(:, 2)):b(1, 4):(max(b(:, 2))+b(1, 4)))';


% sets the density function h_\mu
if weight==1 || weight==2;
    if weight==2    
        for jj=1:2*M
            for ii=1:2*N
                Hu(jj, ii)=sin(x(ii)*pi)+2;
                %Hu(jj, ii)=sin(x(ii)-pi/2)+sin(y(jj)-pi/2)+5;
            end
        end
    else
        Hu=ones(2*M, 2*N);
    end
%normalising hu
Hu=Hu/((sum(sum(Hu)))*b(1,3)*b(1, 4));

end

if weight==0;
Hu=ones(2*M,2*N);
Huc=ones(M,N);
Huh=ones(M,N);
Huv=ones(M,N);
Hnc=ones(M,N);
Hnh=ones(M,N);
Hnv=ones(M,N);

% Re-organise data to match the format of b-matrix. 
% note that matlab reads data by columns.
huc=reshape(Huc', nm, 1); 
huh=reshape(Huh', nm, 1);
huv=reshape(Huv', nm, 1);
hnc=reshape(Hnc', nm, 1);
hnh=reshape(Hnh', nm, 1);
hnv=reshape(Hnv', nm, 1);

else 
% extract h_\mu at center of box
Huctemp=Hu(:, 1:2:2*N-1);
Huc=Huctemp(1:2:2*M-1,:);

% extract h_\mu at left+right edges of box i, index i corresponds to right edge.
Huhtemp=Hu(:, 2:2:2*N);
Huh=Huhtemp(1:2:2*M-1, : );

% extract h_\mu at top+botom edges of box i, index i corresponds to top edge 
Huvtemp=Hu(2:2:2*M, :);
Huv=Huvtemp(:, 1:2:2*N-1);

% re-organise data...
huc=reshape(Huc', nm, 1);
huh=reshape(Huh', nm, 1);
huv=reshape(Huv', nm, 1);

% calculating the density function h_\nu, using the fact that h_\nu=Ph_\mu
hnc=P'*huc;
hnh=P'*huh; 
hnv=P'*huv;

% converts h_\ny back into a M by N matrix. 
Hnc=reshape(hnc, N, M)';
Hnh=reshape(hnh, N, M)';
Hnv=reshape(hnv, N, M)';
end
